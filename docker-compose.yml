version: '3.9'
services:
  application:
    build:
      dockerfile: ./docker/backend_docker/Dockerfile
    restart: always
    environment:
      POSTGRES_DSN: postgresql://postgres:password@db/postgres
      POSTGRES_SERVER: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      REDIS_PUBSUB_HOST: redis_pubsub
      REDIS_PUBSUB_PORT: 8001
      REDIS_PUBSUB_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    depends_on:
      - db
      - cache
      - redis_pubsub
      - minio-server
    ports:
      - "8080:8080"
    networks:
      - enrollment

  minio-server:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: password
    volumes:
      - ./minio-data:/data
    networks:
      - enrollment
    command: server /data --console-address :9001

  db:
    image: postgres:15.2-alpine
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    restart: always
    networks:
      - enrollment
    volumes:
      - ./db_logs:/var/lib/postgresql/logs
    command: postgres -c log_statement=all -c logging_collector=on -c log_directory=/var/lib/postgresql/logs -c log_filename=postgresql.log

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
    networks:
      - enrollment

  redis_pubsub:
    image: redis:6.2-alpine
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    ports:
      - "6380:6379"
    volumes:
      - redis_pubsub:/data
    networks:
      - enrollment

volumes:
  cache:
    driver: local
  redis_pubsub:
    driver: local
  minio-data:

networks:
  enrollment:
    driver: bridge
